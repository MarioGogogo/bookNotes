(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{237:function(e,t,a){"use strict";a.r(t);var n=a(0),s=Object(n.a)({},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"content"},[e._m(0),e._v(" "),a("p",[e._v("当运行容器时，使用的镜像如果在本地中不存在，"),a("a",{attrs:{href:"https://www.centos.bz/tag/docker/",target:"_blank",rel:"noopener noreferrer"}},[e._v("docker"),a("OutboundLink")],1),e._v(" 就会自动从 docker 镜像仓库中下载，默认是从 Docker Hub 公共镜像源下载。")]),e._v(" "),a("p",[e._v("下面我们来学习：")]),e._v(" "),e._m(1),e._v(" "),e._m(2),e._v(" "),e._m(3),e._v(" "),e._m(4),a("p",[e._v("各个选项说明:")]),e._v(" "),e._m(5),e._v(" "),a("p",[e._v("同一仓库源可以有多个 TAG，代表这个仓库源的不同个版本，如 ubuntu 仓库源里，有 16.04、15.04 等多个不同的版本，我们使用 REPOSITORY:TAG 来定义不同的镜像。")]),e._v(" "),e._m(6),e._v(" "),a("p",[e._v("我们如果要使用版本为 16.04 的 ubuntu 系统镜像来运行容器时，命令如下：")]),e._v(" "),e._m(7),a("p",[e._v("如果要使用版本为 15.04 的 ubuntu 系统镜像，则命令如下：")]),e._v(" "),e._m(8),a("p",[e._v("各个参数解析：")]),e._v(" "),e._m(9),e._v(" "),e._m(10),e._v(" "),e._m(11),e._v(" "),e._m(12),a("p",[e._v("下载完成后，我们可以直接使用这个镜像来运行容器。")]),e._v(" "),e._m(13),e._v(" "),a("p",[e._v("我们可以从 Docker Hub 网站来搜索镜像，Docker Hub 网址为： "),a("a",{attrs:{href:"https://hub.docker.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://hub.docker.com/"),a("OutboundLink")],1),a("br"),e._v("\n我们也可以使用 "),a("code",[e._v("docker search")]),e._v(" 命令来搜索镜像。比如我们需要一个 "),a("a",{attrs:{href:"https://www.centos.bz/tag/httpd/",target:"_blank",rel:"noopener noreferrer"}},[e._v("httpd"),a("OutboundLink")],1),e._v(" 的镜像来作为我们的 web 服务。我们可以通过 "),a("code",[e._v("docker search")]),e._v(" 命令搜索 httpd 来寻找适合我们的镜像。")]),e._v(" "),e._m(14),e._v(" "),e._m(15),e._v(" "),e._m(16),e._v(" "),e._m(17),e._v(" "),e._m(18),a("p",[e._v("下载完成后，我们就可以使用这个镜像了。")]),e._v(" "),e._m(19),e._v(" "),a("p",[e._v("当我们从 docker 镜像仓库中下载的镜像不能满足我们的需求时，我们可以通过以下两种方式对镜像进行更改。")]),e._v(" "),e._m(20),e._v(" "),e._m(21),e._v(" "),a("p",[e._v("更新镜像之前，我们需要使用镜像来创建一个容器。")]),e._v(" "),e._m(22),a("p",[e._v("在运行的容器内使用 apt-get "),a("a",{attrs:{href:"https://www.centos.bz/tag/update/",target:"_blank",rel:"noopener noreferrer"}},[e._v("update"),a("OutboundLink")],1),e._v(" 命令进行更新。")]),e._v(" "),e._m(23),a("p",[e._v("在完成操作之后，输入 exit 命令来退出这个容器。")]),e._v(" "),e._m(24),e._v(" "),e._m(25),a("p",[e._v("此时 ID 为 12847d9f5071 的容器，是按我们的需求更改的容器。我们可以通过命令 docker "),a("a",{attrs:{href:"https://www.centos.bz/tag/commit/",target:"_blank",rel:"noopener noreferrer"}},[e._v("commit"),a("OutboundLink")],1),e._v(" 来提交容器副本。")]),e._v(" "),e._m(26),a("p",[e._v("各个参数说明：")]),e._v(" "),e._m(27),e._v(" "),e._m(28),e._v(" "),e._m(29),a("p",[e._v("从上面的信息中可以看到我们更新过的镜像，文件体积明显比之前大了一些。")]),e._v(" "),e._m(30),e._v(" "),e._m(31),e._v(" "),e._m(32),a("p",[e._v("每一个指令都会在镜像上创建一个新的层，每一个指令的前缀都必须是大写的。")]),e._v(" "),a("p",[e._v("第一条 FROM，指定使用哪个镜像源")]),e._v(" "),a("p",[e._v("RUN 指令告诉 docker 在镜像内执行命令，安装了什么")]),e._v(" "),e._m(33),e._v(" "),e._m(34),e._v(" "),e._m(35),a("p",[e._v("参数说明：")]),e._v(" "),e._m(36),e._v(" "),e._m(37),e._v(" "),e._m(38),e._m(39),e._v(" "),e._m(40),e._v(" "),e._m(41),e._v(" "),e._m(42),a("p",[e._v("docker tag 镜像 ID，这里是 9c55ea9b9ee8，用户名称、镜像源名 (repository name) 和新的标签名(tag)。")]),e._v(" "),a("p",[e._v("使用 docker images 命令可以看到，ID 为 9c55ea9b9ee8 的镜像多了一个 v3-1 的标签。")]),e._v(" "),e._m(43),e._m(44),e._v(" "),a("p",[e._v("Dockerfile 代码更新频繁，自然 docker build 构建同名镜像也频繁的很，产生了众多名为 none 的无用镜像。")]),e._v(" "),a("p",[e._v("分别执行以下三行可清除：")]),e._v(" "),e._m(45),a("p",[e._v("之前有写过一些 Docker 技巧和命令（在文章的尾部），这里再重复 2 个。\n停止所有容器，删除所有容器：")]),e._v(" "),e._m(46),a("p",[e._v("停止所有容器，删除所有容器，删除所有镜像：")]),e._v(" "),e._m(47)])},[function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"docker-使用指南"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-使用指南","aria-hidden":"true"}},[this._v("#")]),this._v(" Docker 使用指南")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[t("ol",[t("li",[this._v("管理和使用本地 Docker 主机镜像")])])]),this._v(" "),t("li",[t("ol",{attrs:{start:"2"}},[t("li",[this._v("创建镜像")])])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"列出镜像列表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#列出镜像列表","aria-hidden":"true"}},[this._v("#")]),this._v(" 列出镜像列表")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("我们可以使用 "),t("code",[this._v("docker images")]),this._v(" 来列出存在于宿主机上的镜像。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v(" root@ubuntu:~# docker images\n REPOSITORY         TAG        IMAGE ID     CREATED      SIZE\n alpine           latest      055936d39205   3 weeks ago    5.53MB\n mysql           5.7        7faa3c53e6d6   3 weeks ago    373MB\n ubuntu           15.04       d1b55fd07600   3 years ago    131MB\n ubuntu           16.04       2a697363a870   2 weeks ago    119MB\n\n\n")])])])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ul",[a("li",[e._v("REPOSITORY：表示镜像的仓库源")]),e._v(" "),a("li",[e._v("TAG：镜像的标签")]),e._v(" "),a("li",[e._v("IMAGE ID：镜像 ID")]),e._v(" "),a("li",[e._v("CREATED：镜像创建时间")]),e._v(" "),a("li",[e._v("SIZE：镜像大小")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"以相应的镜像启动容器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#以相应的镜像启动容器","aria-hidden":"true"}},[this._v("#")]),this._v(" 以相应的镜像启动容器")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("root@ubuntu:~# docker run -it ubuntu:16.04 sh\n\n\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("root@ubuntu:~# docker run -it ubuntu:15.04 sh\n\n\n")])])])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ul",[a("li",[e._v("docker: Docker 的二进制执行文件。")]),e._v(" "),a("li",[e._v("run: 与前面的 docker 组合来运行一个容器。")]),e._v(" "),a("li",[e._v("-it: 其实是两个参数组成， -i 和 -t，-i: 允许你对容器内的标准输入 (STDIN) 进行交互。-t: 在新容器内指定一个伪终端或终端。")]),e._v(" "),a("li",[e._v("ubuntu:15.04 指定要运行的镜像，Docker 首先从本地主机上查找镜像是否存在，如果不存在，Docker 就会从镜像仓库 Docker Hub 下载公共镜像。")]),e._v(" "),a("li",[e._v("sh: 执行命令。")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"获取一个新镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#获取一个新镜像","aria-hidden":"true"}},[this._v("#")]),this._v(" 获取一个新镜像")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("当我们在宿主机上使用一个不存在的镜像时 Docker 就会自动下载这个镜像。如果我们想预先下载这个镜像，我们可以使用 "),t("code",[this._v("docker pull")]),this._v(" 命令来下载它。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v(" root@ubuntu:~# docker pull ubuntu:18.04\n 18.04: Pulling from library/ubuntu\n 6abc03819f3e: Pull complete\n 05731e63f211: Pull complete\n 0bd67c50d6be: Pull complete\n Digest: sha256:f08638ec7ddc90065187e7eabdfac3c96e5ff0f6b2f1762cf31a4f49b53000a5\n Status: Downloaded newer image for ubuntu:18.04\n\n\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"查找镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查找镜像","aria-hidden":"true"}},[this._v("#")]),this._v(" 查找镜像")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:"http://book.52react.cn/20191227132016.png",alt:""}})])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("NAME: 镜像仓库源的名称")]),this._v(" "),t("li",[this._v("DESCRIPTION: 镜像的描述")]),this._v(" "),t("li",[this._v("OFFICIAL: 是否 docker 官方发布")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"拉取-httpd-镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#拉取-httpd-镜像","aria-hidden":"true"}},[this._v("#")]),this._v(" 拉取 httpd 镜像")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("我们决定使用上图中的 httpd 官方版本的镜像，使用命令 "),t("code",[this._v("docker pull")]),this._v(" 来下载镜像。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("root@ubuntu:~# docker pull httpd\n Using default tag: latest\n latest: Pulling from library/httpd\n 743f2d6c1f65: Already exists\n c92eb69846a6: Pull complete\n 2211b052800a: Pull complete\n aed180197314: Pull complete\n 7c472a4980a7: Pull complete\n Digest: sha256:a35ad614c1ffc6fe931f12dc42b682edbdcc62cf78d8edc41499dd90ef0f8003\n Status: Downloaded newer image for httpd:latest\n\n\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"创建镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建镜像","aria-hidden":"true"}},[this._v("#")]),this._v(" 创建镜像")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[t("ol",[t("li",[this._v("从已经创建的容器中更新镜像，并且提交这个镜像")])])]),this._v(" "),t("li",[t("ol",{attrs:{start:"2"}},[t("li",[this._v("使用 Dockerfile 指令来创建一个新的镜像")])])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"更新镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#更新镜像","aria-hidden":"true"}},[this._v("#")]),this._v(" 更新镜像")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("root@ubuntu:~# docker run -it ubuntu:16.04 sh\n\n\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v(" # apt-get update\n Get:1 http://archive.ubuntu.com/ubuntu xenial InRelease [247 kB]\n Get:2 http://security.ubuntu.com/ubuntu xenial-security InRelease [109 kB]\n Get:3 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [109 kB]\n Get:4 http://archive.ubuntu.com/ubuntu xenial-backports InRelease [107 kB]\n Get:5 http://archive.ubuntu.com/ubuntu xenial/main amd64 Packages [1558 kB]\n Get:6 http://security.ubuntu.com/ubuntu xenial-security/main amd64 Packages [844 kB]\n Get:7 http://archive.ubuntu.com/ubuntu xenial/restricted amd64 Packages [14.1 kB]\n Get:8 http://archive.ubuntu.com/ubuntu xenial/universe amd64 Packages [9827 kB]\n Get:9 http://archive.ubuntu.com/ubuntu xenial/multiverse amd64 Packages [176 kB]\n Get:10 http://archive.ubuntu.com/ubuntu xenial-updates/main amd64 Packages [1237 kB]\n Get:11 http://security.ubuntu.com/ubuntu xenial-security/restricted amd64 Packages [12.7 kB]\n Get:12 http://security.ubuntu.com/ubuntu xenial-security/universe amd64 Packages [556 kB]\n Get:13 http://archive.ubuntu.com/ubuntu xenial-updates/restricted amd64 Packages [13.1 kB]\n Get:14 http://archive.ubuntu.com/ubuntu xenial-updates/universe amd64 Packages [967 kB]\n Get:15 http://archive.ubuntu.com/ubuntu xenial-updates/multiverse amd64 Packages [19.1 kB]\n Get:16 http://archive.ubuntu.com/ubuntu xenial-backports/main amd64 Packages [7942 B]\n Get:17 http://archive.ubuntu.com/ubuntu xenial-backports/universe amd64 Packages [8532 B]\n Get:18 http://security.ubuntu.com/ubuntu xenial-security/multiverse amd64 Packages [6113 B]\n Fetched 15.8 MB in 8s (1933 kB/s)\n Reading package lists... Done\n\n\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("通过 "),t("code",[this._v("docker ps -a")]),this._v(" 查看所有容器：")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('root@ubuntu:~# docker ps -a\n CONTAINER ID   IMAGE              COMMAND        CREATED      STATUS           PORTS          NAMES\n 12847d9f5071   ubuntu:16.04           "sh"          2 minutes ago   Exited (0) 43 seconds ago               peaceful_edison\n 3cec6f5e47c0   httpd              "httpd-foreground"   5 minutes ago   Exited (0) 5 minutes ago               vigilant_heisenberg\n\n\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('root@ubuntu:~# docker commit -m="has update" -a="yeqing112" 12847d9f5071 yeqing112/ubuntu:v2\nsha256:5cce1167ee4c083ff9b87e61a58081805e76d015a12a4811bd152263aa013860\n\n\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("-m: 提交的描述信息。")]),this._v(" "),t("li",[this._v("-a: 指定镜像作者。")]),this._v(" "),t("li",[this._v("12847d9f5071: 容器 ID。")]),this._v(" "),t("li",[this._v("yeqing112/ubuntu:v2: 指定要创建的目标镜像名。")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("我们可以使用 "),t("code",[this._v("docker images")]),this._v(" 命令来查看我们的新镜像 yeqing112/ubuntu:v2：")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("root@ubuntu:~# docker images\nREPOSITORY                   TAG                 IMAGE ID            CREATED             SIZE\nyeqing112/ubuntu             v2                  5cce1167ee4c        2 minutes ago       144MB\nubuntu                       16.04               2a697363a870        2 weeks ago         119MB\n\n\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"构建镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#构建镜像","aria-hidden":"true"}},[this._v("#")]),this._v(" 构建镜像")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("除了上面更新镜像的方法，我们还可以使用命令 "),t("code",[this._v("docker build")]),this._v(" ， 从零开始来构建一个新的镜像。为此，我们需要创建一个 Dockerfile 文件，其中包含一组指令来告诉 Docker 如何构建我们的镜像。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('root@ubuntu:~# cat Dockerfile\nFROM    ubuntu:16.04\nMAINTAINER      Fisher "service@urlos.com"\n\nRUN     apt-get update\n\nEXPOSE  22\nEXPOSE  80\n\nCMD     /bin/bash\n\n\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("这里我们还是一样，执行一个 "),t("code",[this._v("apt-get update")]),this._v(" 更新命令")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("然后，我们使用 Dockerfile 文件，通过 "),t("code",[this._v("docker build -t yeqing112/ubuntu:v3")]),this._v(" . 命令来构建一个新镜像。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('root@ubuntu:~# root@ubuntu:/home# docker build -t yeqing112/ubuntu:v3 .\nSending build context to Docker daemon  422.4kB\nStep 1/6 : FROM    ubuntu:16.04\n ---\x3e 2a697363a870\nStep 2/6 : MAINTAINER      Fisher "service@urlos.com"\n ---\x3e Running in 92229e7a091a\nRemoving intermediate container 92229e7a091a\n ---\x3e 9a89f4debc7d\nStep 3/6 : RUN     apt-get update\n ---\x3e Running in d709ef335784\nGet:1 http://archive.ubuntu.com/ubuntu xenial InRelease [247 kB]\nGet:2 http://security.ubuntu.com/ubuntu xenial-security InRelease [109 kB]\nGet:3 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [109 kB]\nGet:4 http://archive.ubuntu.com/ubuntu xenial-backports InRelease [107 kB]\nGet:5 http://security.ubuntu.com/ubuntu xenial-security/main amd64 Packages [844 kB]\nGet:6 http://archive.ubuntu.com/ubuntu xenial/main amd64 Packages [1558 kB]\nGet:7 http://archive.ubuntu.com/ubuntu xenial/restricted amd64 Packages [14.1 kB]\nGet:8 http://archive.ubuntu.com/ubuntu xenial/universe amd64 Packages [9827 kB]\nGet:9 http://security.ubuntu.com/ubuntu xenial-security/restricted amd64 Packages [12.7 kB]\nGet:10 http://security.ubuntu.com/ubuntu xenial-security/universe amd64 Packages [556 kB]\nGet:11 http://archive.ubuntu.com/ubuntu xenial/multiverse amd64 Packages [176 kB]\nGet:12 http://archive.ubuntu.com/ubuntu xenial-updates/main amd64 Packages [1237 kB]\nGet:13 http://archive.ubuntu.com/ubuntu xenial-updates/restricted amd64 Packages [13.1 kB]\nGet:14 http://archive.ubuntu.com/ubuntu xenial-updates/universe amd64 Packages [967 kB]\nGet:15 http://archive.ubuntu.com/ubuntu xenial-updates/multiverse amd64 Packages [19.1 kB]\nGet:16 http://archive.ubuntu.com/ubuntu xenial-backports/main amd64 Packages [7942 B]\nGet:17 http://archive.ubuntu.com/ubuntu xenial-backports/universe amd64 Packages [8532 B]\nGet:18 http://security.ubuntu.com/ubuntu xenial-security/multiverse amd64 Packages [6113 B]\nFetched 15.8 MB in 5s (3051 kB/s)\nReading package lists...\nRemoving intermediate container d709ef335784\n ---\x3e 540751496556\nStep 4/6 : EXPOSE  22\n ---\x3e Running in 9ae528bc083f\nRemoving intermediate container 9ae528bc083f\n ---\x3e cfccc621a52d\nStep 5/6 : EXPOSE  80\n ---\x3e Running in efd88e9349c1\nRemoving intermediate container efd88e9349c1\n ---\x3e 428cb5221a06\nStep 6/6 : CMD     /bin/bash\n ---\x3e Running in 2bc08b664f97\nRemoving intermediate container 2bc08b664f97\n ---\x3e 9c55ea9b9ee8\nSuccessfully built 9c55ea9b9ee8\nSuccessfully tagged yeqing112/ubuntu:v3\n\n\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("-t：指定要创建的目标镜像名")]),this._v(" "),t("li",[this._v(".：Dockerfile 文件所在目录，可以指定 Dockerfile 的绝对路径")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("构建成功后，使用 "),t("code",[this._v("docker images")]),this._v(" 查看镜像：")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("root@ubuntu:~# docker images\nREPOSITORY                   TAG                 IMAGE ID            CREATED             SIZE\nyeqing112/ubuntu             v3                  9c55ea9b9ee8        9 seconds ago       144MB\nyeqing112/ubuntu             v2                  5cce1167ee4c        16 minutes ago      144MB\nubuntu                       16.04               2a697363a870        2 weeks ago         119MB\n\n\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("由上面的信息看出，新的镜像 v3 与 v2 文件体积是一样的，两个镜像都只是执行了"),t("code",[this._v("apt-get update")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"设置镜像标签"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#设置镜像标签","aria-hidden":"true"}},[this._v("#")]),this._v(" 设置镜像标签")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("我们可以使用 "),t("code",[this._v("docker tag")]),this._v(" 命令，为镜像添加一个新的标签。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("root@ubuntu:/home# docker tag 9c55ea9b9ee8 yeqing112/ubuntu:v3-1\n\n\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("root@ubuntu:/home# docker images\nREPOSITORY                   TAG                 IMAGE ID            CREATED             SIZE\nyeqing112/ubuntu             v3                  9c55ea9b9ee8        21 minutes ago      144MB\nyeqing112/ubuntu             v3-1                9c55ea9b9ee8        21 minutes ago      144MB\nyeqing112/ubuntu             v2                  5cce1167ee4c        38 minutes ago      144MB\nubuntu                       16.04               2a697363a870        2 weeks ago         119MB\n\n\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"删除-docker-镜像中为-none-的镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#删除-docker-镜像中为-none-的镜像","aria-hidden":"true"}},[this._v("#")]),this._v(" 删除 Docker 镜像中为 none 的镜像")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("docker ps -a | grep \"Exited\" | awk '{print $1 }'|xargs docker stop\ndocker ps -a | grep \"Exited\" | awk '{print $1 }'|xargs docker rm\ndocker images|grep none|awk '{print $3 }'|xargs docker rmi\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("docker kill $(docker ps -q) ; docker rm $(docker ps -a -q)\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("docker kill $(docker ps -q) ; docker rm $(docker ps -a -q) ; docker rmi $(docker images -q -a)\n")])])])}],!1,null,null,null);t.default=s.exports}}]);