(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{260:function(t,a,r){"use strict";r.r(a);var e=r(0),s=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("div",{staticClass:"content"},[r("h1",{attrs:{id:"渲染机制"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#渲染机制","aria-hidden":"true"}},[t._v("#")]),t._v(" 渲染机制")]),t._v(" "),r("h3",{attrs:{id:"什么是doctype？作用？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#什么是doctype？作用？","aria-hidden":"true"}},[t._v("#")]),t._v(" 什么是DOCTYPE？作用？")]),t._v(" "),r("p",[t._v("DOCTYPE是用来声明文档类型和DTD规范的，-个主要的用途便是文件的合法性验证。\n如果文件代码不合法，那么浏览器解析时便会出一些差错")]),t._v(" "),r("blockquote",[r("p",[t._v("大白话：DOCTYPE就是告诉浏览器什么是DTD的，当前文档用什么DTD")])]),t._v(" "),r("p",[t._v("DTD (document type definition,文档类型定义)是一系列的语法规则，用来定义XML\n或(X)HTML的文件类型。浏览器会使用它来判断文档类型，决定使用何种协议来解析,\n以及切换浏览器模式")]),t._v(" "),r("blockquote",[r("p",[t._v("大白话：DTD就是告诉浏览器我是什么文档类型，浏览器根据这个来解析渲染它")])]),t._v(" "),r("h3",{attrs:{id:"html5"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#html5","aria-hidden":"true"}},[t._v("#")]),t._v(" HTML5")]),t._v(" "),r("div",{staticClass:"language-javascript extra-class"},[r("pre",{pre:!0,attrs:{class:"language-javascript"}},[r("code",[r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),r("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOCTYPE")]),t._v(" html"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),r("h3",{attrs:{id:"html4"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#html4","aria-hidden":"true"}},[t._v("#")]),t._v(" HTML4")]),t._v(" "),r("p",[t._v("分严格模式和宽松模式：区别在于对某些弃用元素的使用上是否支持（比如font）")]),t._v(" "),r("p",[t._v("浏览器怎么渲染的 在浏览器url---\x3e发送什么： dns解析 响应  渲染\n"),r("img",{attrs:{src:"http://book.52react.cn/20190328124044.png",alt:""}})]),t._v(" "),r("h2",{attrs:{id:"工作流程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#工作流程","aria-hidden":"true"}},[t._v("#")]),t._v(" 工作流程")]),t._v(" "),r("ol",[r("li",[t._v("浏览器拿到html经过htmlParser转成DOM tree")]),t._v(" "),r("li",[t._v("浏览器拿到css 经过cssParser 转成Style Rule")]),t._v(" "),r("li",[t._v("进一步结合经过attachment之后转成 render Tree告诉浏览器我要渲染的一个结构是这样的。")]),t._v(" "),r("li",[t._v("但此时html不知道具体的布局内容也不知道某个DOM节点的位置在哪里，通过Layout可以告诉DOM宽高 位置，")]),t._v(" "),r("li",[t._v("再经过浏览器GUI画图的Painting工序之后呈现出来Display给用户看见")])]),t._v(" "),r("p",[t._v("看下DOMtree\n"),r("img",{attrs:{src:"http://book.52react.cn/20190328125100.png",alt:""}}),t._v("\n看下CSStree\n"),r("img",{attrs:{src:"http://book.52react.cn/20190328125553.png",alt:""}}),t._v("\n看下Rendertree\n"),r("img",{attrs:{src:"http://book.52react.cn/20190328125636.png",alt:""}}),t._v("\nlayout\n"),r("img",{attrs:{src:"http://book.52react.cn/20190328125748.png",alt:""}})]),t._v(" "),r("h2",{attrs:{id:"重排reflow（瑞佛low）"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#重排reflow（瑞佛low）","aria-hidden":"true"}},[t._v("#")]),t._v(" 重排Reflow（瑞佛low）")]),t._v(" "),r("h3",{attrs:{id:"定义"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#定义","aria-hidden":"true"}},[t._v("#")]),t._v(" 定义")]),t._v(" "),r("p",[t._v("DOM结构中的各个元素都有自己的盒子(模型)， 这些都需要浏览器根据各种样式来计算并根据计算结果将元素放到它该出现的位置，这个过程称之为reflow\n注意：我们的每个DOM节点可能都不是固定的，div里面有内容 js会修改dom，浏览器需要重排，明确什么时候出发reflow；")]),t._v(" "),r("h3",{attrs:{id:"触发reflow"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#触发reflow","aria-hidden":"true"}},[t._v("#")]),t._v(" 触发Reflow")]),t._v(" "),r("p",[t._v("（面试的时候还可以问如何避免出发reflow）")]),t._v(" "),r("ol",[r("li",[t._v("当你增加、删除、修改DOM结点时，会导致Reflow或Repaint")]),t._v(" "),r("li",[t._v("当你移动DOM的位置，或是搞个动画的时候")]),t._v(" "),r("li",[t._v("当你修改CSS样式的时候")]),t._v(" "),r("li",[t._v("当你Resize窗口的时候(移动端没有这个问题)，或是 滚动的时候")]),t._v(" "),r("li",[t._v("当你修改网页的默认字体时，（会有性能问题很容易出现或者闪现（不推荐））")])]),t._v(" "),r("h2",{attrs:{id:"重绘repaint（瑞鹏的）"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#重绘repaint（瑞鹏的）","aria-hidden":"true"}},[t._v("#")]),t._v(" 重绘Repaint（瑞鹏的）")]),t._v(" "),r("h3",{attrs:{id:"定义-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#定义-2","aria-hidden":"true"}},[t._v("#")]),t._v(" 定义")]),t._v(" "),r("p",[t._v("当各种盒子的位置、大小以及其他属性，例如颜色、字体大小等都确定下来后，浏览器于是便把这些元素都按照各自的特性绘制了一遍,于是页面的内容出现了，这个过程称之为repaint")]),t._v(" "),r("blockquote",[r("p",[t._v("大白话：页面呈现的内容统统画在屏幕上就是repaint")])]),t._v(" "),r("h3",{attrs:{id:"触发repaint"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#触发repaint","aria-hidden":"true"}},[t._v("#")]),t._v(" 触发Repaint")]),t._v(" "),r("p",[t._v("如何尽量减少repaint的程度 无法避免但可以最大程度降低")]),t._v(" "),r("ol",[r("li",[t._v("DOM改动")]),t._v(" "),r("li",[t._v("CSS改动")])])])}],!1,null,null,null);a.default=s.exports}}]);