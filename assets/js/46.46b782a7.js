(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{250:function(t,a,s){"use strict";s.r(a);var e=s(0),n=Object(e.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),s("p",[t._v("defer是在html解析完之后才会执行，若是多个，按照加载顺序执行")]),t._v(" "),t._m(6),s("p",[t._v("执行顺序 1.js ---\x3e2.js")]),t._v(" "),s("p",[t._v("async是在加载完之后立即执行，若是多个，执行顺序与加载顺序无关")]),t._v(" "),t._m(7),s("p",[t._v("执行顺序:与加载顺序无关")]),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),s("p",[t._v("对于一个数据请求来说，可以分为发起网络请求、后端处理、浏览器响应三个步骤。浏览器缓存可以帮助我们在第一和第三步骤中优化性能。比如说直接使用缓存而不发起请求，或者发起了请求但后端存储的数据和前端一致，那么就没有必要再将数据回传回来，这样就减少了响应数据。")]),t._v(" "),s("p",[t._v("资源文件在浏览器中存在的备份/副本")]),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),s("p",[t._v("浏览器不询问服务器，直接使用本地的缓存\n大白话：不问浏览器，直接拿来用")]),t._v(" "),s("p",[t._v("http响应头：")]),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),s("p",[t._v("如果服务器2个时间都下发的话，以后者为准。")]),t._v(" "),t._m(14),t._v(" "),s("p",[t._v("浏览器发送请求询问服务器是否可以使用本地缓存文件")]),t._v(" "),s("p",[t._v("大白话：不确定本地是否要用，询问服务器协商下，文件能不能用看看是否过期；")]),t._v(" "),s("p",[t._v("Last-Modified 服务器下发的")]),t._v(" "),s("p",[t._v("If-Modified-Since 请求的 带着的")]),t._v(" "),s("p",[t._v("If-None-Match")]),t._v(" "),s("p",[t._v("Etag Hash值")]),t._v(" "),s("p",[t._v("Last-Modified常与If-Modified-Since一起由客户端将Last-Modified值包括在HTTP头信息中发给服务端进行处理。")]),t._v(" "),s("p",[t._v("通过时间判断数据有没有更新不能很好的确定文件有没有更改；")]),t._v(" "),s("p",[t._v("Etag可以理解为根据文件内容计算的hash值；")]),t._v(" "),s("p",[t._v("ETag常与If-None-Match或者If-Match一起，由客户端通过HTTP头信息(包括ETag值)发送给服务端处理。")]),t._v(" "),t._m(15),t._v(" "),s("p",[t._v("感谢"),s("a",{attrs:{href:"https://github.com/ljianshu",target:"_blank",rel:"noopener noreferrer"}},[t._v("浪里行舟"),s("OutboundLink")],1),t._v(" "),s("img",{attrs:{src:"http://book.52react.cn/20190329131450.png",alt:""}})]),t._v(" "),t._m(16),t._v(" "),t._m(17),t._v(" "),t._m(18),t._v(" "),s("p",[t._v("以上两点结论就是浏览器缓存机制的关键，它确保了每个请求的缓存存入与读取，只要我们再理解浏览器缓存的使用规则，那么所有的问题就迎刃而解了，本文也将围绕着这点进行详细分析。为了方便大家理解，这里我们根据是否需要向服务器重新发起 HTTP 请求将缓存过程分为两个部分，分别是强缓存和协商缓存。")]),t._v(" "),t._m(19),t._v(" "),s("p",[t._v("第一次打开网页浏览器缓存不起作用，那必须使用CDN。")]),t._v(" "),t._m(20),t._v(" "),s("p",[t._v("浏览器输入url第一步做的就是预解析，多个域名  预解析DNs")]),t._v(" "),s("p",[t._v("浏览器的a标签，在有些环境下是默认打开预解析的，但是在https开头的是关闭预解析的")]),t._v(" "),t._m(21),s("p",[t._v("参考文章\n"),s("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=MzUxMzcxMzE5Ng%3D%3D&mid=2247490829&idx=1&sn=a79c746dd55d740f6854d86a47a30686#rd",target:"_blank",rel:"noopener noreferrer"}},[t._v("来自前端之巅微信公众号"),s("OutboundLink")],1)])])},[function(){var t=this.$createElement,a=this._self._c||t;return a("h3",{attrs:{id:"提升页面性能的方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#提升页面性能的方法","aria-hidden":"true"}},[this._v("#")]),this._v(" 提升页面性能的方法")])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ol",[s("li",[t._v("资源压缩合并，减少HTTP请求")]),t._v(" "),s("li",[t._v("非核心代码异步加载 -> 异步加载的方式 -> 异步加载的区别")]),t._v(" "),s("li",[t._v("利用浏览器缓存 -> 缓存的分类 -> 缓存的原理")]),t._v(" "),s("li",[t._v("利用CDN")]),t._v(" "),s("li",[t._v("预解析 浏览器默认预解析（https默认关闭预解析）dns-prefetch x-dns-prefetch-control")])])},function(){var t=this.$createElement,a=this._self._c||t;return a("h3",{attrs:{id:"异步加载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#异步加载","aria-hidden":"true"}},[this._v("#")]),this._v(" 异步加载")])},function(){var t=this.$createElement,a=this._self._c||t;return a("h4",{attrs:{id:"异步加载的方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#异步加载的方式","aria-hidden":"true"}},[this._v("#")]),this._v(" 异步加载的方式")])},function(){var t=this.$createElement,a=this._self._c||t;return a("ol",[a("li",[this._v("动态脚本加载")]),this._v(" "),a("li",[this._v("defer")]),this._v(" "),a("li",[this._v("async")])])},function(){var t=this.$createElement,a=this._self._c||t;return a("h4",{attrs:{id:"异步加载的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#异步加载的区别","aria-hidden":"true"}},[this._v("#")]),this._v(" 异步加载的区别")])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v(" ./defer1.js"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("charset")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("utf-8"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("defer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token script"}}),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v(" /defer2.js"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("charset")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("utf-8"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("defer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token script"}}),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v(" ./defer1.js"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("charset")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("utf-8"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("async")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token script"}}),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v(" /defer2.js"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("charset")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("utf-8"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("async")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token script"}}),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("h3",{attrs:{id:"浏览器缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器缓存","aria-hidden":"true"}},[this._v("#")]),this._v(" 浏览器缓存")])},function(){var t=this.$createElement,a=this._self._c||t;return a("blockquote",[a("p",[this._v("缓存可以说是性能优化中简单高效的一种优化方式了。一个优秀的缓存策略可以缩短网页请求资源的距离，减少延迟，并且由于缓存文件可以重复利用，还可以减少带宽，降低网络负荷。")])])},function(){var t=this.$createElement,a=this._self._c||t;return a("h4",{attrs:{id:"缓存的分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓存的分类","aria-hidden":"true"}},[this._v("#")]),this._v(" 缓存的分类")])},function(){var t=this.$createElement,a=this._self._c||t;return a("h5",{attrs:{id:"强缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#强缓存","aria-hidden":"true"}},[this._v("#")]),this._v(" 强缓存")])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[this._v("Expires 服务器的"),a("code",[this._v("绝对时间")]),this._v("，与浏览器时间可能存在偏差")])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[this._v("Cache-Control Cache-Control:max-age= =3600 跟的是"),a("code",[this._v("相对时间")]),this._v("，以秒为单位，在3600S内直接使用缓存，也就是说在这个时间范围内我不会去再请求服务器了，直接拿缓存。")])},function(){var t=this.$createElement,a=this._self._c||t;return a("h5",{attrs:{id:"协商缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#协商缓存","aria-hidden":"true"}},[this._v("#")]),this._v(" 协商缓存")])},function(){var t=this.$createElement,a=this._self._c||t;return a("h5",{attrs:{id:"缓存的原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓存的原理","aria-hidden":"true"}},[this._v("#")]),this._v(" 缓存的原理")])},function(){var t=this.$createElement,a=this._self._c||t;return a("h4",{attrs:{id:"缓存过程分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓存过程分析","aria-hidden":"true"}},[this._v("#")]),this._v(" 缓存过程分析")])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[this._v("浏览器与服务器通信的方式为应答模式，即是：浏览器发起 HTTP 请求 – 服务器响应该请求，那么浏览器怎么确定一个资源该不该缓存，如何去缓存呢？浏览器第一次向服务器发起该请求后拿到请求结果后，将请求结果和缓存标识存入浏览器缓存，浏览器对于缓存的处理是根据第一次请求资源时返回的响应头来确定的。具体过程如下图：\n"),a("img",{attrs:{src:"http://book.52react.cn/20190329131844.png",alt:""}}),this._v("\n由上图我们可以知道：")])},function(){var t=this.$createElement,a=this._self._c||t;return a("ol",[a("li",[this._v("浏览器每次发起请求，都会先在浏览器缓存中查找该请求的结果以及缓存标识；")]),this._v(" "),a("li",[this._v("浏览器每次拿到返回的请求结果都会将该结果和缓存标识存入浏览器缓存中。")])])},function(){var t=this.$createElement,a=this._self._c||t;return a("h3",{attrs:{id:"使用cdn"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用cdn","aria-hidden":"true"}},[this._v("#")]),this._v(" 使用CDN")])},function(){var t=this.$createElement,a=this._self._c||t;return a("h3",{attrs:{id:"预解析dns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#预解析dns","aria-hidden":"true"}},[this._v("#")]),this._v(" 预解析DNS")])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[t._v('<meta http-equiv="x-ans-prefetch-control" content= ="on">\n'),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("link")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("rel")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("dns-prefetch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("//host_ name_ ,to_ prefetch.com"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("**\n")])])])}],!1,null,null,null);a.default=n.exports}}]);