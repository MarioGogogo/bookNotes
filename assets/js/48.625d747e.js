(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{243:function(t,r,a){"use strict";a.r(r);var e=a(0),s=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,r=t.$createElement,a=t._self._c||r;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"charles使用指南"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#charles使用指南","aria-hidden":"true"}},[t._v("#")]),t._v(" Charles使用指南")]),t._v(" "),a("p",[t._v("Charles 的功能很强大，我们这里只介绍几个常用的并且非常实用的功能：")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("将 Charles 设置成系统代理")])]),t._v(" "),a("li",[a("p",[t._v("截取移动设备上的网络请求包")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("手动重复请求（Repeat，Advanced Repeat）")])]),t._v(" "),a("li",[a("p",[t._v("手动模拟请求（Compose）")])]),t._v(" "),a("li",[a("p",[t._v("修改网络请求内容（Compose）")])])])]),t._v(" "),a("li",[a("p",[t._v("过滤网络请求")])]),t._v(" "),a("li",[a("p",[t._v("代理转发")])]),t._v(" "),a("li",[a("p",[t._v("支持 https 请求抓包（如果配置了还是抓不到，下面有解决方案）")])])]),t._v(" "),a("p",[t._v("Charles 主要提供两种查看封包的视图，分别名为 “Structure” 和 “Sequence”。")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("Structure 视图将网络请求按访问的域名分类。")])]),t._v(" "),a("li",[a("p",[t._v("Sequence 视图将网络请求按访问的时间排序。")])])]),t._v(" "),a("p",[a("img",{attrs:{src:"http://book.52react.cn/20191201004539.png",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"下面将一一介绍这些如何配置和使用："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#下面将一一介绍这些如何配置和使用：","aria-hidden":"true"}},[t._v("#")]),t._v(" 下面将一一介绍这些如何配置和使用：")]),t._v(" "),a("h3",{attrs:{id:"一-将-charles-设置成系统代理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一-将-charles-设置成系统代理","aria-hidden":"true"}},[t._v("#")]),t._v(" 一. 将 Charles 设置成系统代理")]),t._v(" "),a("p",[t._v("Charles 是通过将自己设置成代理服务器来完成抓包的，勾选系统代理后，系统本地发出去的请求都能被截取下来。如果只抓取 APP 的包的话，可关闭此配置，这样不会出现太多的数据看着比较乱。")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://book.52react.cn/20191201004644.png",alt:""}})]),t._v(" "),a("p",[t._v("需要注意的是，Chrome 和 Firefox 浏览器默认并不使用系统的代理服务器设置，而 Charles 是通过将自己设置成代理服务器来完成封包截取的，所以在默认情况下无法截取 Chrome 和 Firefox 浏览器的网络通讯内容。如果你需要截取的话，在 Chrome 中设置成使用系统的代理服务器设置即可，或者直接将代理服务器设置成 "),a("code",[t._v("127.0.0.1:8888")]),t._v(" 也可达到相同效果。")]),t._v(" "),a("h3",{attrs:{id:"二-截取移动设备上的网络请求包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二-截取移动设备上的网络请求包","aria-hidden":"true"}},[t._v("#")]),t._v(" 二. 截取移动设备上的网络请求包")]),t._v(" "),a("p",[t._v("我们在调试移动 APP 时，需要抓取 APP 发送的数据包，首先进行设置，Proxy -> Proxy Settings 默认端口是"),a("code",[t._v("8888")]),t._v("，根据实际情况可修改。")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://book.52react.cn/20191201004754.png",alt:""}})]),t._v(" "),a("p",[t._v("查看本机 IP 地址：Help -> Local IP Addresses")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://book.52react.cn/20191201004922.png",alt:""}})]),t._v(" "),a("p",[t._v("然后配置手机代理：")]),t._v(" "),a("p",[t._v("IOS 和 Android 配置差不多")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://book.52react.cn/20191201005001.png",alt:""}})]),t._v(" "),a("p",[t._v("打开要调试的 APP，请求就会先发送到 Charles，然后验证是否允许访问。")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://book.52react.cn/20191201005030.png",alt:""}})]),t._v(" "),a("p",[t._v("当点击允许后，可以在 Proxy -> Access Control Settings 里看到可以访问此代理服务器列表")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://book.52react.cn/20191201005058.png",alt:""}})]),t._v(" "),a("p",[a("strong",[t._v("注意")])]),t._v(" "),a("p",[t._v("如果不小心点击了拒绝，可以手动添加手机 IP/Mac 地址到允许访问列表，或者重启 Charles，手机再次访问，会再次提示选择。")]),t._v(" "),a("p",[t._v("如果不想每换一个手机都要进行验证，可以配置允许所有手机访问，加入")]),t._v(" "),a("p",[a("code",[t._v("0.0.0.0/0（IPv4）或::/0（IPv6）")])]),t._v(" "),a("p",[t._v("现在就可以抓包了，拿一款我们公司开发的乐视车联 APP（像是做广告，你猜对了，用了两天写文章，还不允许我打个广告吗？ios 和安卓商城均可下载 😆）来做测试：")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://book.52react.cn/20191201005147.png",alt:""}})]),t._v(" "),a("p",[t._v("参看信息\n"),a("img",{attrs:{src:"http://book.52react.cn/20191201005239.png",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"三-过滤网络请求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三-过滤网络请求","aria-hidden":"true"}},[t._v("#")]),t._v(" 三. 过滤网络请求")]),t._v(" "),a("pre",[a("code",[t._v("通常情况下，网络请求是非常大量的，从几十个请求里找到我们需要的观察的某个请求比较费时，那么我们就需要对网络请求进行过滤，只监控向指定目录服务器上发送的请求。有两种方法：\n")])]),t._v(" "),a("ol",[a("li",[t._v("在 Sequence 界面的中部的 Filter 栏中填入需要过滤出来的关键字。例如我们的服务器的地址是：*.leautolink.com，那么只需要在 Filter 栏中填入 leautolink 即可。（一般用于临时过滤）")])]),t._v(" "),a("p",[a("img",{attrs:{src:"http://book.52react.cn/20191201005324.png",alt:""}})]),t._v(" "),a("ol",[a("li",[t._v('在 Charles 的菜单栏选择"Proxy"->"Recording Settings"，然后选择 Include 栏，选择添加一个项目，然后填入需要监控的协议，主机地址，端口号。这样就可以只截取目标网站的封包了。如下图所示：（固定过滤地址）')])]),t._v(" "),a("p",[a("img",{attrs:{src:"http://book.52react.cn/20191201005357.png",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"四-代理转发"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四-代理转发","aria-hidden":"true"}},[t._v("#")]),t._v(" 四. 代理转发")]),t._v(" "),a("p",[t._v("实际开发时，有这样的场景，服务端线上版本有 bug，你在本地修改程序后，需要模拟实际的线上环境，来验证程序的正确性，最笨的方法就是让客户端修改一下 APP 的调用地址到你本机，然后重新打一个版本供你模拟测试，这样虽然可以，但每次遇到 bug 都要这么做的话，那效率极其低下，然而 Charles 为我们解决了这个问题。")]),t._v(" "),a("p",[t._v("请求转发，把调用方调用的地址转发到你本机地址的程序进行执行。")]),t._v(" "),a("p",[t._v("右键 -> Map Remote ...")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://book.52react.cn/20191201005432.png",alt:""}})]),t._v(" "),a("p",[t._v("并且配置 Tools -> Map Romote")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://book.52react.cn/20191201005500.png",alt:""}})]),t._v(" "),a("p",[t._v("运行 APP")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://book.52react.cn/20191201005527.png",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"五-https-请求抓包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#五-https-请求抓包","aria-hidden":"true"}},[t._v("#")]),t._v(" 五. Https 请求抓包")]),t._v(" "),a("p",[t._v("默认我们是看不到 https 的请求数据的。我们需要安装证书。")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://book.52react.cn/20191201005600.png",alt:""}})]),t._v(" "),a("p",[t._v("Mac:")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://book.52react.cn/20191201005641.png",alt:""}})]),t._v(" "),a("p",[t._v("双击打开 Charles Proxy CA")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://book.52react.cn/20191201005717.png",alt:""}})]),t._v(" "),a("p",[a("img",{attrs:{src:"http://book.52react.cn/20191201005740.png",alt:""}})]),t._v(" "),a("p",[t._v("手机配置完代理（必须的操作）后，浏览器打开"),a("code",[t._v("http://chls.pro/ssl")])]),t._v(" "),a("p",[a("img",{attrs:{src:"http://book.52react.cn/20191201005818.png",alt:""}})]),t._v(" "),a("p",[t._v("然后配置"),a("code",[t._v("Proxy -> SSL Proxying Settings")]),t._v("... 添加要抓取的 https 请求")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://book.52react.cn/20191201005903.png",alt:""}})]),t._v(" "),a("p",[t._v("然后再次请求：")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://book.52react.cn/20191201005928.png",alt:""}})]),t._v(" "),a("p",[t._v("如果不再使用 Charles，想删除手机里的证书文件怎么删除呢？")]),t._v(" "),a("p",[a("strong",[t._v("设置->通用->描述文件与设备管理，删除指定的证书即可")])]),t._v(" "),a("p",[a("img",{attrs:{src:"http://book.52react.cn/20191227103857.png",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"ssl-的问题："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ssl-的问题：","aria-hidden":"true"}},[t._v("#")]),t._v(" SSL 的问题：")]),t._v(" "),a("p",[t._v("最近 iPhone 系统更新到 ios 10.3 后,用 Charles 抓包竟然出现了一些问题,https 的请求都会失败,提示错误信息为 Failure SSLHandshake: Received fatal alert: unknown_ca 和 You may need to configure your browser or application to trust the Charles Root Certificate. 然而之前任何问题都没有,并且相关设置都正确:电脑上安装了 Charles 的根证书,并且设置了始终信任,然后手机上也登录了http://chls.pro/ssl安装了描述文件,一切都按正常程序走的,但是错误始终无法解决.")]),t._v(" "),a("p",[a("strong",[t._v("原因：")])]),t._v(" "),a("p",[t._v("虽然 charles 的根证书已经在安装列表中显示,但它是被关闭的。在 iOS 10.3 之前,当你将安装一个自定义证书,iOS 会默认信任,不需要进一步的设置。而 iOS 10.3 之后,安装新的自定义证书默认是不受信任的。如果要信任已安装的自定义证书,需要手动打开开关以信任证书。")]),t._v(" "),a("p",[a("strong",[t._v("解决：")])]),t._v(" "),a("p",[t._v("设置->通用->关于本机->证书信任设置-> 找到 charles proxy custom root certificate 然后信任该证书即可.")]),t._v(" "),a("h2",{attrs:{id:"模拟延时请求模拟"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模拟延时请求模拟","aria-hidden":"true"}},[t._v("#")]),t._v(" 模拟延时请求模拟")]),t._v(" "),a("p",[t._v("模拟超慢网速（会导致接口数据返回超时的那种...）\n设置带宽和延迟时间（毫秒）")]),t._v(" "),a("p",[t._v("注：可以根据下图中的翻译体会下导致网络延迟的原因:")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://book.52react.cn/20191201010330.png",alt:""}})]),t._v(" "),a("p",[t._v("看看效果\n"),a("img",{attrs:{src:"http://book.52react.cn/20191201010439.png",alt:""}})]),t._v(" "),a("p",[t._v("其他参数设置\n"),a("img",{attrs:{src:"http://book.52react.cn/20191201010532.png",alt:""}})])])}],!1,null,null,null);r.default=s.exports}}]);